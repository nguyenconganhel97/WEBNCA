- redis : Database memory
- Chạy php : php artisan serve
- Gen key trong ENV : php artisan key:generate
- App_evn : Môi trường chạy -- local -- test -- live
- php artisan tin : Giống như đang chạy code trên hệ thống
- Middleware : 1 tầng check lọc trước khi vào controller
- Node js : npm i 
- php : composer install
===>ROUTER
Router::get('news/{id}/catgory/{category}',function($id,$category){
return $id;
})->name('user.show')->where('id',['0-9']);

href = '{{route('user.show',['id'=>'a','name' => '3'])}}'

where cho tất cả router
-->vào RouterSerive :
boot ==> 
Route::pattern('id','[0-9]');
- Group router
 Sử dụng trong phân quyền nhóm người dùng
 Mỗi nhóm người dùng truy suất khác nhau
 Vd : get('backend/api1')
	: get('backend/api2')
- Prefix : đầu tiền tố api giống nhau	
Route::group('prefix'=>'backend');
VD 
 Route::group(['prefix'=>'backend'],function(){
	Route::get('api1',function(){
		return ();
	});
 }
 );
 
 Route::prefix('backend')->group(function(){
 
 })
 
==> Router namespace
 Demo thì dùng router function callback còn thực tế thì không dùng
- Tạo controller
php artisan make:controller Backend/UserController
- Cú pháp API 
Route::get($uri,$callback);
- Xem tất cả danh sách route đang có 
- Route Resource va Resource Controller
- Trong 1 controller
 index : hiển thị danh sách
 create : màn hình tạo khi load
 store : nhận req khi submit form lên
 edit : màn hình hiển thị sửa
 update : submit form từ sửa
 show : xem chi tieets
 
 
 
 
 
Front-End : React JS --- axios, data : JSON --> API (Server)
-->Server : Node JS --> procedure (DB)
NPM ~ Composer
-->Framework : Sails.js ~ Laravel
DB : PostgreSQL/Oracle --> Insert,update,send email,send sms ...


Simple example function of account activation is closed
+) GET data

https://192.168.1.243/account/getListUserClose

account ~~ AccountController
getListUserClose

"funckey": "prc_patriotx_get_list_close" -- name procedure get data 

+) Process
 
https://192.168.1.243/account/KichHoatTk

account ~~ AccountController 

KichHoatTk

"funckey": "prc_txprocess_2026",  -- name procedure process data 
 
 
 
 